<ui:composition xmlns="http://www.w3c.org/1999/xhtml"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/templates/main.xhtml">
    <!-- ........THIS PAGE SHOWS THE LIST OF GREENHOUSES ; IF THE BUTTON IS PRESSED ON A GREENHOUSE THEN THE GREENHOUSEDETAILSPAGE............... -->
    <!-- ........OF THE SENSOR STATION(GREENHOUSE) OF THE CORRESPONDING GREENHOUSE IS OPENED::::::::::::::::::::::::::::::::............... -->


    <ui:define name="title">Plant Health: Sensor Station Management</ui:define>
    <ui:define name="head">
        <link rel="stylesheet" href="/webjars/font-awesome/6.4.0/css/all.min.css" />
    </ui:define>


    <ui:define name ="content">




        <!-- ...................................Sensor station CREATE dialog Form.................................... -->
        <h:form id="createDialog">

            <!-- ....................Create sensor station dialog.................................................... -->
            <p:dialog header="Create New Sensor Station" id="createSSDialog" widgetVar="createSSDialog" modal="true"
                      showEffect="fade" hideEffect="fade" resizable="false">
                <p:ajax event="close" update="createSSDialog"/>
                <p:outputPanel id="createSS">
                    <h:panelGrid columns="2">
                        <p:outputLabel for="usernameCreation" value="Sensor Station Name:"/>
                        <p:inputText id="usernameCreation"
                                     placeholder="Required field" value="#{createSensorStationBean.sensorStationName}" required="true"/>
                        <p:outputLabel for="description" value="Description:"/>
                        <p:inputText id="description"
                                     placeholder="description" value="#{createSensorStationBean.description}" required="false"/>
                        <p:outputLabel for="location" value="Location:"/>
                        <p:inputText id="location" value="#{createSensorStationBean.location}"/>
                        <p:outputLabel for="AlarmCountTreshold" value="Alarm Count Treshold:"/>
                        <p:inputText id="AlarmCountTreshold" value="#{createSensorStationBean.alarmCountThreshold}"/>
                        <!-- ................Create Sensor Station Button....................... -->
                        <p:commandButton value="Create"
                                         action="#{createSensorStationBean.doCreateNewCreateSensorStation()}"
                                         update=":userForm:sensorStationTable"
                                         oncomplete="PF('createSSDialog').hide(); location.reload()"/>
                        <p:commandButton value="Cancel" onclick="PF('createSSDialog').hide()"/>
                    </h:panelGrid>
                </p:outputPanel>
            </p:dialog>

        </h:form>













        <!-- .........................................TABLE.............................................................. -->
        <h:form id="userForm">

            <div class="col-12">

                <div class="card">

                    <!-- ....................Sensor station CREATE button..................... -->
                    <p:commandButton  style="margin-right: 5px" value="Create new Sensor Station" update=":createDialog:createSSDialog" oncomplete="PF('createSSDialog').show()"
                                      icon="pi pi-user-plus" title="New Sensor Station" class="btn btn-primary">
                        <p:resetInput target=":createDialog:createSSDialog"/>
                    </p:commandButton>

                    <!-- ....................Help button...........................BUTTON................................. -->
                    <p:commandButton type="button" icon="fa fa-duotone fa-seedling" title="Help"
                                     styleClass="ui-button-secondary outlined-button"
                                     onclick="PF('SSDialog').show()"/>

                    <p:dataTable id="sensorStationTable" var="sensorStation" value="#{sensorStationListController.sensorStationList}"
                                 scrollHeight="550"
                                 paginatorPosition="bottom" rowKey="#{sensorStation.id}">

                        <p:ajax event="rowToggle" listener="#{sensorStationDetailController.onRowToggle}" />


                        <p:column style="width: 7%" headerText="Sensor Stations: #{sensorStationListController.sensorStationsAmount}" >
                            <p:rowToggler/>
                        </p:column>

                        <p:column style="width: 7%" headerText="Id" sortBy="#{sensorStation.id}" filterBy="#{sensorStation.id}">
                            <h:outputText value="#{sensorStation.id}"/>
                        </p:column>

                        <p:column style="width: 5%" headerText="Access Point" sortBy="#{sensorStation.accessPoint}" filterBy="#{sensorStation.accessPoint}">
                            <h:outputText value="#{sensorStation.accessPoint}"/>
                        </p:column>

                        <p:column  headerText="Plant" sortBy="#{sensorStation.plant.plantName}" filterBy="#{sensorStation.plant.plantName}">
                            <h:outputText value="#{sensorStation.plant}"/>
                        </p:column>

                        <p:column  headerText="Gardeners">
                            <h:outputText value="#{sensorStation.gardener}"/>
                        </p:column>


                        <p:column style="" headerText="Intervals">
                            <h:outputText value="W:#{SSIntervalController.getActualWebAppIntervalForSensorStation(sensorStation)}  "/>
                            <h:outputText value=" M:#{SSIntervalController.getActualMeasurementIntervalForSensorStation(sensorStation)} "/>
                        </p:column>


                        <p:column style="width: 8%" headerText="Alarm Status">
                            <em class="#{measurementListController.getMeasurementTypeIcon('AIR_PRESSURE')}"
                               style="color:#{measurementListController.getSensorStatus('AIR_PRESSURE',sensorStation) == 'OK' ? 'green' : 'red'}"
                               title="Air Pressure"></em>
                            <em class="#{measurementListController.getMeasurementTypeIcon('TEMPERATURE')}"
                               style="color:#{measurementListController.getSensorStatus('TEMPERATURE',sensorStation) == 'OK' ? 'green' : 'red'}"
                               title="Temperature"></em>
                            <em class="#{measurementListController.getMeasurementTypeIcon('SOIL_MOISTURE')}"
                               style="color:#{measurementListController.getSensorStatus('SOIL_MOISTURE',sensorStation) == 'OK' ? 'green' : 'red'}"
                               title="Soil Moisture"></em>
                            <em class="#{measurementListController.getMeasurementTypeIcon('AIR_QUALITY')}"
                               style="color:#{measurementListController.getSensorStatus('AIR_QUALITY',sensorStation) == 'OK' ? 'green' : 'red'}"
                               title="Air Quality"></em>
                            <em class="#{measurementListController.getMeasurementTypeIcon('LIGHT_INTENSITY')}"
                               style="color:#{measurementListController.getSensorStatus('LIGHT_INTENSITY',sensorStation) == 'OK' ? 'green' : 'red'}"
                               title="Light Intensity"></em>
                            <em class="#{measurementListController.getMeasurementTypeIcon('HUMIDITY')}"
                               style="color:#{measurementListController.getSensorStatus('HUMIDITY',sensorStation) == 'OK' ? 'green' : 'red'}"
                               title="Humidity"></em>
                        </p:column>

                        <p:column style="width: 6%; text-align: left " headerText="Location" sortBy="#{sensorStation.location}" filterBy="#{sensorStation.location}">
                            <h:outputText value="#{sensorStation.location}"/>
                        </p:column>

                        <p:column style="width: 5%" headerText="Alarm switch" sortBy="#{sensorStation.alarmSwitch}" filterBy="#{sensorStation.alarmSwitch}">
                            <h:outputText value="#{sensorStation.alarmSwitch}"/>
                        </p:column>

                        <p:column style="width: 5%" headerText="Alarm Treshold" sortBy="#{sensorStation.alarmCountThreshold}" filterBy="#{sensorStation.alarmCountThreshold}">
                            <h:outputText value="#{sensorStation.alarmCountThreshold}"/>
                        </p:column>

                        <p:column style="align-items: center" headerText="Interactions">

                            <!-- DetailView page Button -->
                            <p:button style="margin-right: 2px" icon="pi pi-search"
                                             title="open Detail-View"
                                             href="/greenHouseDetails.xhtml?id=#{sensorStation.id}" />


                            <!-- .................... INTERVALS BUTTON ........... .............. -->
                            <p:commandButton style="margin-right: 2px; background-color: orange" update=":userForm"
                                             oncomplete="PF('intervalEditDialog').show()" icon="fa fa-solid fa-sliders" title="Intervals">
                                <f:setPropertyActionListener value="#{sensorStation.id}" target="#{SSIntervalController.ssId}"/>
                            </p:commandButton>

                            <!-- ....................SENSOR STATION pairing BUTTON ........... .............. -->
                            <p:commandButton  style="margin-right: 2px; background-color: darkorange" update=":userForm:pairingDialog"
                                              oncomplete="PF('pairingDialog').show()" icon="pi pi-sync" title="Pair">
                                <f:setPropertyActionListener value="#{sensorStation.id}" target="#{pairingController.sensorStationId}"/>
                            </p:commandButton>


                            <!-- ....................SENSOR STATION EDIT BUTTON ........... .............. -->
                            <p:commandButton style="margin-right: 2px; background-color: grey" update=":userForm:userEditDialog"
                                             oncomplete="PF('userEditDialog').show()" icon="fa fa-solid fa-gear" title="Edit">
                                <f:setPropertyActionListener value="#{sensorStation}" target="#{sensorStationDetailController.sensorStation}"/>
                            </p:commandButton>

                            <!-- ....................DELETE SENSOR STATION BUTTON ........... .............. -->
                            <p:commandButton styleClass="ui-button-danger"
                                             action="#{sensorStationDetailController.doDeleteSensorStation()}" icon="fa fa-solid fa-trash-can"
                                             title="Delete"
                                             update=":userForm:sensorStationTable"
                                            oncomplete="location.reload()">
                                <f:setPropertyActionListener value="#{sensorStation}" target="#{sensorStationDetailController.sensorStation}"/>
                                <p:confirm header="Confirmation"
                                           message="Are you sure that you want to delete the sensor station '#{sensorStation.sensorStationName}'? You cannot undo this operation."
                                           icon="pi pi-exclamation-triangle"/>
                            </p:commandButton>

                        </p:column>

                        <!-- .........................................ROW EXPANSION.......................................................... -->
                        <p:rowExpansion>
                            <div class="orders-subtable">
                                <h5>Latest Measurements for Greenhouse #{sensorStation.id}</h5>
                                <p:dataTable var="measurement" value="#{sensorStationDetailController.latestMeasurements}" reflow="true" rowKey="#{measurement.id}">
                                    <p:column headerText="Type" sortBy="#{measurement.type}">
                                        <h:outputText value="#{measurement.type}" />
                                    </p:column>

                                    <p:column headerText="Value" sortBy="#{measurement.value_s}">
                                        <h:outputText value="#{measurement.getFormattedValue()}" />
                                    </p:column>

                                    <p:column headerText="Unit" sortBy="#{measurement.unit}">
                                        <h:outputText value="#{measurement.unit}">
                                            <f:convertNumber currencySymbol="$" type="currency" />
                                        </h:outputText>
                                    </p:column>

                                    <p:column headerText="Sensor Alarm Status">
                                        <h:form rendered="#{not empty measurement.id}">
                                        <em class="#{measurementListController.getMeasurementTypeIcon(measurement.type)}"
                                           style="display: flex; justify-content: center; align-items: center; color:#{measurementListController.getSensorStatus(measurement.type,sensorStation) == 'OK' ? 'green' : 'red'}"
                                           title="#{measurement.type}"></em>
                                        </h:form>
                                    </p:column>

                                </p:dataTable>
                            </div>
                        </p:rowExpansion>

                    </p:dataTable>
                </div>
            </div>












            <!-- .......................................DIALOGS...................................................................... -->
            <!-- ...................................Interval Edit dialog.................................... -->
            <p:dialog header="Edit Sensor Station Intervals" id="intervalEditDialog" widgetVar="intervalEditDialog" modal="true"
                      showEffect="fade" hideEffect="fade" resizable="false">
                <p:outputPanel id="intervalData">
                    <h:panelGrid columns="1">

                        <p:outputLabel for="mInterval" value="New Interval Webapp: (minutes):"/>
                        <p:inputText id="mInterval" value="#{SSIntervalController.webAppInterval}" />
                        <p:outputLabel for="sinterval" value="New Interval Measurements: (minutes)"/>
                        <p:inputText id="sinterval"  value="#{SSIntervalController.measurementInterval}"/>

                    </h:panelGrid>
                    <h:panelGrid columns="3">
                        <p:commandButton value="Save New Intervals" action="#{SSIntervalController.doSaveInterval()}"
                                         oncomplete="PF('intervalEditDialog').hide();location.reload()" update="sensorStationTable"/>
                        <p:commandButton value="Abort" onclick="PF('intervalEditDialog').hide()"/>

                    </h:panelGrid>
                </p:outputPanel>
            </p:dialog>


            <!-- ...................................PAIR WITH Access point..DIALOG.................................. -->
            <p:dialog header="Pairing" id="pairingDialog" widgetVar="pairingDialog" modal="true"
                      showEffect="fade" hideEffect="fade" resizable="false" closable="false">
                <p:outputPanel id="userData2" >
                    <h:panelGrid columns="1">

                        <p:outputLabel for="pairedWith" value="Paired With:"/>
                        <p:inputText rendered="#{not empty pairingController.sensorStationAccessPointId}" id="pairedWith" value="#{pairingController.sensorStationAccessPointId}" disabled="true" />
                        <p:outputLabel for="sensorStationAccessPoint" value="Pair to new Access Point:"/>
                        <p:selectOneMenu value="#{pairingController.accessPointId}" id="sensorStationAccessPoint" filter="true" emptyLabel="Access Point ID"
                                         scrollHeight="250" updateLabel="true" >
                            <f:selectItems value="#{pairingController.accessPointsIds}"/>
                            <f:facet name="footer">
                                <p:divider styleClass="mt-0" />
                                <h:outputText value="3 options" style="font-weight:bold;"/>
                            </f:facet>
                        </p:selectOneMenu>
                        <!-- ...................................PAIR/UNPAIR BUTTONS .................................... -->
                        <h:panelGrid columns="3">
                        <p:commandButton value="Remove current pairing" action="#{pairingController.unpair()}"
                                         oncomplete="PF('pairingDialog').hide();location.reload()" update=":userForm:sensorStationTable">
                        <p:confirm header="Confirmation"
                                   message="Are you sure that you want to unpair the sensor station?"
                                   icon="pi pi-exclamation-triangle"/>
                        </p:commandButton>
                        </h:panelGrid>

                        <h:panelGrid columns="2">

                            <p:commandButton id="startBatch" value="Pair" actionListener="#{pairingController.pair}" update=":userForm:sensorStationTable"
                                                oncomplete="location.reload()"/>

                            <p:commandButton id="abortbutton"  async="true" value="Abort Pairing" actionListener="#{pairingController.abortPairing()}" update=":userForm:sensorStationTable"  />
                            <p:ajax event="click" listener="#{pairingController.abortPairing()}" oncomplete="PF('pairingDialog').hide()" />

                        </h:panelGrid>

                    </h:panelGrid>

                </p:outputPanel>
            </p:dialog>

            <!-- ...................................CONFIRMATION DIALOG .................................... -->
            <p:confirmDialog global="true" showEffect="fade" hideEffect="fade" width="300">
                <p:commandButton value="Yes" type="button" styleClass="ui-confirmdialog-yes" icon="pi pi-check"/>
                <p:commandButton value="No" type="button" styleClass="ui-confirmdialog-no" icon="pi pi-times"/>
            </p:confirmDialog>



            <!-- ...................................Sensor station Edit dialog.................................... -->
            <p:dialog header="Edit Sensor Station" id="userEditDialog" widgetVar="userEditDialog" modal="true"
                      showEffect="fade" hideEffect="fade" resizable="false">
                <p:outputPanel id="userData" rendered="#{not empty sensorStationDetailController.sensorStation}">
                    <h:panelGrid columns="1">

                        <p:outputLabel for="sensorStationId" value="Sensor-station name:"/>
                        <p:inputText id="sensorStationId" value="#{sensorStationDetailController.sensorStation.sensorStationName}" disabled="true" />
                        <p:outputLabel for="sensorStationlocation" value="Sensor-station location:"/>
                        <p:inputText id="sensorStationlocation" rendered="#{not empty sensorStationDetailController.sensorStation}" value="#{sensorStationDetailController.sensorStation.location}"/>
                        <p:outputLabel for="alarmCountTreshold" value="Alarm Count Treshold:"/>
                        <p:inputText id="alarmCountTreshold" value="#{sensorStationDetailController.sensorStation.alarmCountThreshold}" />
                        <p:outputLabel for="sensorStationswitchEdit" value="Alarm Switch:"/>
                        <p:selectOneMenu id="sensorStationswitchEdit" value="#{sensorStationDetailController.sensorStation.alarmSwitch}"  >
                            <f:selectItem itemLabel="Fixed" itemValue="fixed"/>
                            <f:selectItem itemLabel="Off" itemValue="Off"/>
                        </p:selectOneMenu>
                        <!-- ...................................GARDENER ADD AND REMOVE.................................... -->
                        <p:outputLabel for="AddGardenre" value="Add Gardeners:"/>
                        <p:selectCheckboxMenu id="AddGardenre" value="#{sensorStationDetailController.gardeners}" label="Gardeners" style="min-width: 15rem"
                                              multiple="true" filter="true" filterMatchMode="startsWith" panelStyle="width: 30rem" scrollHeight="250"
                                              emptyLabel="Select Gardener..." updateLabel="true">
                            <f:selectItems value="#{userListController.gardenerNames}"/>
                        </p:selectCheckboxMenu>

                        <p:outputLabel for="RemoveGardener" value="Remove Gardeners:"/>
                        <p:selectCheckboxMenu id="RemoveGardener" value="#{sensorStationDetailController.gardenersToRemove}" label="Gardeners" style="min-width: 15rem"
                                              multiple="true" filter="true" filterMatchMode="startsWith" panelStyle="width: 30rem" scrollHeight="250"
                                              emptyLabel="Select Gardener..." updateLabel="true">
                            <f:selectItems value="#{sensorStationDetailController.sensorStation.gardener}"/>
                        </p:selectCheckboxMenu>


                    </h:panelGrid>
                    <h:panelGrid columns="3">
                        <p:commandButton value="Save" action="#{sensorStationDetailController.doSaveSensorStation()}"
                                         oncomplete="PF('userEditDialog').hide();location.reload()" update=":userForm:sensorStationTable"/>
                        <p:commandButton value="Abort" onclick="PF('userEditDialog').hide()"/>


                    </h:panelGrid>
                </p:outputPanel>
            </p:dialog>

        </h:form>







        <!-- .................................. Help dialog............................................................................... -->
        <p:dialog header="Sensor Station Management Help" id="SSDialog" widgetVar="SSDialog"
                  modal="true"
                  showEffect="fade" hideEffect="fade" resizable="false">
            <p:outputPanel id="SSHelp">
                <h6>Deleting a sensor station:</h6>
                By clicking on the "Delete" button, it's possible to delete the sensor station.
                <h6>Setting sensor station's intervals:</h6>
                By clicking on the "Intervals" button, it's possible to set the intervals of the selected sensor station. "Interval Webapp" is the time interval where new measurements are going to be sent, between access point and webapp. "Interval Measurements" is the time interval where new measurements are going to be sent, between sensor station and access point.
                <h6>Creating a new sensor station:</h6>
                By clicking on the "Create new Sensor Station" button, it's possible to create a new sensor station. "Sensor station Name" is a mandatory field, while all the others are optional.
                Note: a newly created sensor station will always have The Alarm switch set "off" by default.
                <h6>Editing A Sensor Station:</h6>
                By clicking on the "Edit" button, it's possible to edit all the non-mandatory fields and also remove or add gardeners to the specified sensor station.
                Note: Alarm switch will be "on" if one of the alarm count of a sensosr station triggered it, you can manually set it to fixed from here.
                <h6>Pairing:</h6>
                By clicking on the "Pair" button, it's possible to pair the sensor station to a new access point or remove the current one.
                Upon initiating the pairing process, the system will start to try to pair the selected sensor station with the access point for 5 minutes, until interrupted by pressing the "Abort Pairing" button.
                <h6>Detail view:</h6>
                By clicking on the "open Detail-View" button, you will get redirected to the detail view page of the selected sensor station.

            </p:outputPanel>
        </p:dialog>







    </ui:define>
</ui:composition>
